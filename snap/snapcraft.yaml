name: storjshare-gui
version: latest
version-script: cat $SNAPCRAFT_STAGE/version
summary:  Earn money by sharing your hard drive space
description: |
 Just download the Storj desktop application, and choose how much storage
 to share.

grade: stable
confinement: strict

parts:
  storjshare-gui:
    plugin: nil
    after:
      - desktop-gtk2
    override-build: |
      snapcraftctl build
      ARCHITECTURE=$(dpkg --print-architecture)
      if [ "${ARCHITECTURE}" = "amd64" ]; then
        FILTER="amd64.deb"
      elif [ "${ARCHITECTURE}" = "i386" ]; then
        FILTER="i386.deb"
      else
        echo "ERROR! StorjShare-GUI only produces debs for amd64 and i386. Failing the build here."
        exit 1
      fi
      # Get the latest releases json
      echo "Get GitHub releases..."
      wget --quiet https://api.github.com/repos/storj/storjshare-gui/releases/latest -O releases.json
      # Get the version from the tag_name and the download URL.
      VERSION=$(jq . releases.json | grep tag_name | cut -d'"' -f4 | sed s'/v//')
      DEB_URL=$(cat releases.json | jq -r ".assets[] | select(.name | test(\"${FILTER}\")) | .browser_download_url")
      DEB=$(basename "${DEB_URL}")
      echo "Downloading ${DEB_URL}..."
      wget --quiet "${DEB_URL}" -O "${SNAPCRAFT_PART_INSTALL}/${DEB}"
      echo "Unpacking ${DEB}..."
      dpkg -x "${SNAPCRAFT_PART_INSTALL}/${DEB}" ${SNAPCRAFT_PART_INSTALL}
      rm -f releases.json 2>/dev/null
      rm -f "${SNAPCRAFT_PART_INSTALL}/${DEB}" 2>/dev/null
      echo $VERSION > $SNAPCRAFT_STAGE/version
    build-packages:
      - jq
      - sed
      - wget
    stage-packages:
      - libasound2
      - libgconf2-4
      - libnotify4
      - libnspr4
      - libnss3
      - libpcre3
      - libpulse0
      - libxss1
      - libxtst6

apps:
  storjshare-gui:
    command: bin/desktop-launch $SNAP/opt/storjshare/storjshare
    desktop: usr/share/applications/storjshare.desktop
    # Correct the TMPDIR path for Chromium Framework/Electron to
    # ensure libappindicator has readable resources.
    environment:
      TMPDIR: $XDG_RUNTIME_DIR
    plugs:
      - browser-support
      - desktop
      - desktop-legacy
      - gsettings
      - home
      - mount-observe
      - network
      - network-bind
      - opengl
      - pulseaudio
      - removable-media
      - unity7
      - x11
